manifest {
    mainScript = 'main.nf'
    nextflowVersion = '>=20.01.0'
}

// default parameters
params {
    max_cores = Runtime.runtime.availableProcessors()
    cores = '2'
    memory = '2'
    help = false
    profile = false

    // input
    fasta = ''
    list = false

    // parameters
    database = 'uniprotkb'
    customdb = null
    threads = 1
    evalue = 0.1
    minalnlen = 0
    pident = 0.0
    modus = 'full'
    prokka = ''

    // output
    output = 'results'
    workdir = "/tmp/nextflow-work-hypro"
    cachedir = "conda"
    runinfo = "nextflow-run-infos"
    databases = 'nextflow-autodownload-databases'
    databases_indices = databases + '/indices'
}

timeline {
  enabled = true
  file = "${params.runinfo}/execution_timeline.html"
}

report {
  enabled = true
  file = "${params.runinfo}/execution_report.html"
}

profiles {

    standard {
        executor {
                name = "local"
               	cpus = params.max_cores
        }
        workDir = params.workdir
        params.cloudProcess = false
        params.databases = 'nextflow-autodownload-databases'
        includeConfig 'configs/local.config'
        docker { enabled = false }
        includeConfig 'configs/conda.config'
    }


// executer
    local {
        executor {
                name = "local"
               	cpus = params.max_cores
        }
        workDir = params.workdir
        params.cloudProcess = false
        params.databases = 'nextflow-autodownload-databases'
        includeConfig 'configs/local.config'
    }

    lsf {
        executor {
                name = "lsf"
                queueSize = 200
        }
        workDir = params.workdir
        params.cloudProcess = true
        process.cache = "lenient"
        includeConfig 'configs/node.config'
    }


// engines
    conda {
        docker { enabled = false }
        // conda.config contains all tool-specific conda environments that are accessed via process-specific labels
        includeConfig 'configs/conda.config'
    }

    docker {
        docker { enabled = true }
        includeConfig 'configs/container.config'
    }

    singularity {
        singularity {
                enabled = true
                autoMounts = true
                cacheDir = params.cachedir
        }
        includeConfig 'configs/container.config'
    }

}
